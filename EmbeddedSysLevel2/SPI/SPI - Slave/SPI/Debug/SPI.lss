
SPI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001e2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000236  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000236  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c2e  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070e  00000000  00000000  00000f9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000775  00000000  00000000  000016a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  00001e20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b0  00000000  00000000  00001f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000609  00000000  00000000  0000250c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00002b15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 ef 00 	jmp	0x1de	; 0x1de <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "SPI_int.h"
#include "SER_SPI_int.h"

int main(void)
{
    DIO_voidSetPinDirection(PORT_B, PIN4, INPUT);
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	64 e0       	ldi	r22, 0x04	; 4
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	0e 94 53 00 	call	0xa6	; 0xa6 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(PORT_B, PIN5, INPUT);
  76:	40 e0       	ldi	r20, 0x00	; 0
  78:	65 e0       	ldi	r22, 0x05	; 5
  7a:	81 e0       	ldi	r24, 0x01	; 1
  7c:	0e 94 53 00 	call	0xa6	; 0xa6 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(PORT_B, PIN6, OUTPUT);
  80:	41 e0       	ldi	r20, 0x01	; 1
  82:	66 e0       	ldi	r22, 0x06	; 6
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	0e 94 53 00 	call	0xa6	; 0xa6 <DIO_voidSetPinDirection>
    DIO_voidSetPinDirection(PORT_B, PIN7, INPUT);
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	67 e0       	ldi	r22, 0x07	; 7
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	0e 94 53 00 	call	0xa6	; 0xa6 <DIO_voidSetPinDirection>
	
	
    SPI_ENSlaveInit();
  94:	0e 94 e7 00 	call	0x1ce	; 0x1ce <SPI_ENSlaveInit>
	
    uint8_t x = SPI_u8ReceiveData();
  98:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <SPI_u8ReceiveData>
	
	DIO_voidSetPortValue(PORT_A, x);
  9c:	68 2f       	mov	r22, r24
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <DIO_voidSetPortValue>
  a4:	ff cf       	rjmp	.-2      	; 0xa4 <main+0x38>

000000a6 <DIO_voidSetPinDirection>:
  a6:	41 11       	cpse	r20, r1
  a8:	3c c0       	rjmp	.+120    	; 0x122 <DIO_voidSetPinDirection+0x7c>
  aa:	81 30       	cpi	r24, 0x01	; 1
  ac:	99 f0       	breq	.+38     	; 0xd4 <DIO_voidSetPinDirection+0x2e>
  ae:	28 f0       	brcs	.+10     	; 0xba <DIO_voidSetPinDirection+0x14>
  b0:	82 30       	cpi	r24, 0x02	; 2
  b2:	e9 f0       	breq	.+58     	; 0xee <DIO_voidSetPinDirection+0x48>
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	41 f1       	breq	.+80     	; 0x108 <DIO_voidSetPinDirection+0x62>
  b8:	6e c0       	rjmp	.+220    	; 0x196 <DIO_voidSetPinDirection+0xf0>
  ba:	2a b3       	in	r18, 0x1a	; 26
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <DIO_voidSetPinDirection+0x20>
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	6a 95       	dec	r22
  c8:	e2 f7       	brpl	.-8      	; 0xc2 <DIO_voidSetPinDirection+0x1c>
  ca:	80 95       	com	r24
  cc:	82 23       	and	r24, r18
  ce:	8a bb       	out	0x1a, r24	; 26
  d0:	84 e0       	ldi	r24, 0x04	; 4
  d2:	08 95       	ret
  d4:	27 b3       	in	r18, 0x17	; 23
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	02 c0       	rjmp	.+4      	; 0xe0 <DIO_voidSetPinDirection+0x3a>
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	6a 95       	dec	r22
  e2:	e2 f7       	brpl	.-8      	; 0xdc <DIO_voidSetPinDirection+0x36>
  e4:	80 95       	com	r24
  e6:	82 23       	and	r24, r18
  e8:	87 bb       	out	0x17, r24	; 23
  ea:	84 e0       	ldi	r24, 0x04	; 4
  ec:	08 95       	ret
  ee:	24 b3       	in	r18, 0x14	; 20
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_voidSetPinDirection+0x54>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_voidSetPinDirection+0x50>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	84 bb       	out	0x14, r24	; 20
 104:	84 e0       	ldi	r24, 0x04	; 4
 106:	08 95       	ret
 108:	21 b3       	in	r18, 0x11	; 17
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_voidSetPinDirection+0x6e>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_voidSetPinDirection+0x6a>
 118:	80 95       	com	r24
 11a:	82 23       	and	r24, r18
 11c:	81 bb       	out	0x11, r24	; 17
 11e:	84 e0       	ldi	r24, 0x04	; 4
 120:	08 95       	ret
 122:	41 30       	cpi	r20, 0x01	; 1
 124:	d1 f5       	brne	.+116    	; 0x19a <DIO_voidSetPinDirection+0xf4>
 126:	81 30       	cpi	r24, 0x01	; 1
 128:	91 f0       	breq	.+36     	; 0x14e <DIO_voidSetPinDirection+0xa8>
 12a:	28 f0       	brcs	.+10     	; 0x136 <DIO_voidSetPinDirection+0x90>
 12c:	82 30       	cpi	r24, 0x02	; 2
 12e:	d9 f0       	breq	.+54     	; 0x166 <DIO_voidSetPinDirection+0xc0>
 130:	83 30       	cpi	r24, 0x03	; 3
 132:	29 f1       	breq	.+74     	; 0x17e <DIO_voidSetPinDirection+0xd8>
 134:	34 c0       	rjmp	.+104    	; 0x19e <DIO_voidSetPinDirection+0xf8>
 136:	2a b3       	in	r18, 0x1a	; 26
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_voidSetPinDirection+0x9c>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_voidSetPinDirection+0x98>
 146:	82 2b       	or	r24, r18
 148:	8a bb       	out	0x1a, r24	; 26
 14a:	84 e0       	ldi	r24, 0x04	; 4
 14c:	08 95       	ret
 14e:	27 b3       	in	r18, 0x17	; 23
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_voidSetPinDirection+0xb4>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_voidSetPinDirection+0xb0>
 15e:	82 2b       	or	r24, r18
 160:	87 bb       	out	0x17, r24	; 23
 162:	84 e0       	ldi	r24, 0x04	; 4
 164:	08 95       	ret
 166:	24 b3       	in	r18, 0x14	; 20
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_voidSetPinDirection+0xcc>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_voidSetPinDirection+0xc8>
 176:	82 2b       	or	r24, r18
 178:	84 bb       	out	0x14, r24	; 20
 17a:	84 e0       	ldi	r24, 0x04	; 4
 17c:	08 95       	ret
 17e:	21 b3       	in	r18, 0x11	; 17
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_voidSetPinDirection+0xe4>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_voidSetPinDirection+0xe0>
 18e:	82 2b       	or	r24, r18
 190:	81 bb       	out	0x11, r24	; 17
 192:	84 e0       	ldi	r24, 0x04	; 4
 194:	08 95       	ret
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	08 95       	ret
 19a:	84 e0       	ldi	r24, 0x04	; 4
 19c:	08 95       	ret
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	08 95       	ret

000001a2 <DIO_voidSetPortValue>:
 1a2:	81 30       	cpi	r24, 0x01	; 1
 1a4:	49 f0       	breq	.+18     	; 0x1b8 <DIO_voidSetPortValue+0x16>
 1a6:	28 f0       	brcs	.+10     	; 0x1b2 <DIO_voidSetPortValue+0x10>
 1a8:	82 30       	cpi	r24, 0x02	; 2
 1aa:	49 f0       	breq	.+18     	; 0x1be <DIO_voidSetPortValue+0x1c>
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	51 f0       	breq	.+20     	; 0x1c4 <DIO_voidSetPortValue+0x22>
 1b0:	0c c0       	rjmp	.+24     	; 0x1ca <DIO_voidSetPortValue+0x28>
 1b2:	6b bb       	out	0x1b, r22	; 27
 1b4:	84 e0       	ldi	r24, 0x04	; 4
 1b6:	08 95       	ret
 1b8:	68 bb       	out	0x18, r22	; 24
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	08 95       	ret
 1be:	65 bb       	out	0x15, r22	; 21
 1c0:	84 e0       	ldi	r24, 0x04	; 4
 1c2:	08 95       	ret
 1c4:	62 bb       	out	0x12, r22	; 18
 1c6:	84 e0       	ldi	r24, 0x04	; 4
 1c8:	08 95       	ret
 1ca:	82 e0       	ldi	r24, 0x02	; 2
 1cc:	08 95       	ret

000001ce <SPI_ENSlaveInit>:
void SPI_voidSendData(uint8_t data)
{
    SPDR = data;  
    while (!(GETBIT(SPSR, SPIF)));
     
}
 1ce:	6c 98       	cbi	0x0d, 4	; 13
 1d0:	6e 9a       	sbi	0x0d, 6	; 13
 1d2:	08 95       	ret

000001d4 <SPI_u8ReceiveData>:
 * 
 * @return uint8_t 
 */
uint8_t SPI_u8ReceiveData(void)
{
    SPDR = GARBAGE;
 1d4:	1f b8       	out	0x0f, r1	; 15
    while (!(GETBIT(SPSR, SPIF)));  
 1d6:	77 9b       	sbis	0x0e, 7	; 14
 1d8:	fe cf       	rjmp	.-4      	; 0x1d6 <SPI_u8ReceiveData+0x2>
    return SPDR;
 1da:	8f b1       	in	r24, 0x0f	; 15
 1dc:	08 95       	ret

000001de <_exit>:
 1de:	f8 94       	cli

000001e0 <__stop_program>:
 1e0:	ff cf       	rjmp	.-2      	; 0x1e0 <__stop_program>
